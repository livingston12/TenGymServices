version: '3.4'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: "TenGym.Rabbitmq-web"
    networks:
      - tengymservicesnet
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
    user: "root"
  # =============== Databases ===============
  sql-server-product-db: #Product
    image: mcr.microsoft.com/mssql/server
    container_name: TenGymServices.Database.Products
    ports:
      - 1433:1433
    environment:
      - SA_PASSWORD=5Gyj35m^
      - ACCEPT_EULA=Y
      - MSSQL_MEMORY_LIMIT_MB=200
    networks:
      - tengymservicesnet
    volumes:
      - sqlDataProduct:/var/opt/mssql
    mem_limit: 500M
    cpus: 2
  sql-server-plan-db: #plan
    image: mcr.microsoft.com/mssql/server
    container_name: TenGymServices.Database.Plans
    ports:
      - 1434:1433
    environment:
      - SA_PASSWORD=5Gyj35m^
      - ACCEPT_EULA=Y
      - MSSQL_MEMORY_LIMIT_MB=200
    networks:
      - tengymservicesnet
    volumes:
      - sqlDataPlan:/var/opt/mssql
    mem_limit: 500M
    cpus: 2
  # =============== Microservices ===============
  tengymservicesapiproducts:
    image: ${DOCKER_REGITRY-}tengymservicesapiproducts
    build:
      context: .
      dockerfile: TenGymServices.Api.Products/Dockerfile
    ports:
      - 6001:6001
    container_name: "TenGymServices.Api.Products"
    networks:
      - tengymservicesnet
    depends_on:
      - sql-server-product-db
      - rabbitmq
  tengymservicesapiplans:
    image: ${DOCKER_REGITRY-}tengymservicesapiplans
    build:
      context: .
      dockerfile: TenGymServices.Api.Plans/Dockerfile
    ports:
      - 6002:6002
    container_name: "TenGymServices.Api.Plans"
    networks:
      - tengymservicesnet
    depends_on:
      - sql-server-plan-db
      - rabbitmq
networks:
  tengymservicesnet:
    external: true
volumes:
  rabbitmq-data:
  rabbitmq-log:
  sqlDataProduct:
  sqlDataPlan:
